syntax = "proto3";

package beget.vpsAlert.v1.alert;

import "google/api/annotations.proto";
import "vps-alert/proto/v1/structures.proto";

service AlertService {
    // Получение полного списка Alert
    rpc getAlertList (GetAlertListRequest) returns (GetAlertListResponse) {
        option (google.api.http) = {
            get: "/v1/vpsAlert/alert"
        };
    }

    // Получение полной истории срабатываний по существующим Alert
    rpc getAlertHistoryList (GetAlertHistoryListRequest) returns (GetAlertHistoryListResponse) {
        option (google.api.http) = {
            get: "/v1/vpsAlert/alert/history"
        };
    }

    // Получение полного списка активных Alert
    rpc getActiveAlertList (GetActiveAlertListRequest) returns (GetActiveAlertListResponse) {
        option (google.api.http) = {
            get: "/v1/vpsAlert/alert/active"
        };
    }

    // Получение Alert по ID
    rpc getAlert (GetAlertRequest) returns (GetAlertResponse) {
        option (google.api.http) = {
            get: "/v1/vpsAlert/alert/{id}"
        };
    }

    // Получение полной истории срабатываний конкретного Alert
    rpc getAlertHistory (GetAlertHistoryRequest) returns (GetAlertHistoryResponse) {
        option (google.api.http) = {
            get: "/v1/vpsAlert/alert/history/{id}"
        };
    }
}

message GetAlertRequest {
    uint64 id = 1;
}

message GetAlertResponse {
    structures.Alert alert = 1;
}

message GetAlertListRequest {
}

message GetAlertListResponse {
    repeated structures.Alert alert = 1;
}


message GetAlertHistoryRequest {
    uint64 id = 1;
}

message GetAlertHistoryResponse {
    AlertData alert_data = 1;
}

message GetAlertHistoryListRequest {
}

message GetAlertHistoryListResponse {
    repeated AlertData alert_data = 1;
}

message GetActiveAlertListRequest {
}

message GetActiveAlertListResponse {
    repeated AlertData alert_data = 1;
}

// Данные по Alert и интервалам когда он был активен
message AlertData {
    // Сам Alert
    structures.Alert alert = 1;
    // VPS
    repeated Data data = 2;

    message Data {
        string vps_uuid = 1;
        repeated DateInterval active_time = 2;
    }

    message DateInterval {
        // Начало интервала
        string date_from = 1;

        // Конец интервала
        string date_to = 2;
    }
}
